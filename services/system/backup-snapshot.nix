{ config, pkgs, lib, ssd-name, hdd-name, ...}:

let
  my-functions = (import ../../nix/my-functions.nix lib);
in
with my-functions;
{
  environment.systemPackages = with pkgs; [
    (callPackage ../../packages/list-backups.nix {})
  ];

  systemd = {
    services = {
      # one snapshot a day
      "backup-snapshot@" = {
        description = "Online Backup Job (snapshot - %i)";
        after = [
          "mnt-%i.mount"
        ];
        serviceConfig = {
          Type      = "oneshot";
          ExecStart = "${pkgs.callPackage ../../packages/backup-snapshot.nix {}}/bin/backup-snapshot.sh %i";
          PrivateTmp   = "yes";
          ProtectHome  = "yes";
          ProtectClock = "yes";
          ProtectProc  = "invisible";

          #ExecPaths = "/usr/bin";
          #ExecPaths = "/usr/sbin";
          #SELinuxContext = "unconfined_u:unconfined_r:unconfined_t:s0";
        };
      };
      "backup-snapshot@${ssd-name}" = {
        # fixes empty config (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.btrfs-progs
          pkgs.gawk
          pkgs.util-linux
        ];
      };
      "backup-snapshot@${hdd-name}" = {
        # fixes empty config (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.btrfs-progs
          pkgs.gawk
          pkgs.util-linux
        ];
      };
    };

    timers = {
      # one snapshot a day
      "backup-snapshot@" = {
        description = "Online Backup Timer (snapshot - %i)";
        timerConfig = {
          OnCalendar = "*-*-* 06:15:00";
          # also run when system was offline (like anacron)
          Persistent = "true";
        };
      };
      "backup-snapshot@${ssd-name}" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty config (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the context of systemd
        wantedBy = [ "timers.target" ];
      };
      "backup-snapshot@${hdd-name}" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty config (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the context of systemd
        wantedBy = [ "timers.target" ];
      };
    };

    # https://www.freedesktop.org/software/systemd/man/latest/tmpfiles.d.html
    tmpfiles.rules =
    let
      backupLink = mnt: list: (forEach list (e:
        "L+ /mnt/${mnt}/${e}/.backup - - - - ../backup_${mnt}/name/${e}"
      ));
    in
    if (config.networking.hostName == "cookieclicker") then
      backupLink "${ssd-name}" [
        "appdata"
        "etc"
        "home"
        "var"
        "vm"
      ] ++
      backupLink "${hdd-name}" [
        "appdata2"
        "homeBraunJan"
        "homeGaming"
        "machines"
        "resources"
      ]
    else if (config.networking.hostName == "cookiethinker") then
      backupLink "${ssd-name}" [ "etc" "home" ]
      ++
      backupLink "${hdd-name}" [ "homeBraunJan" ]
    else
      backupLink "${ssd-name}" [
        "appdata"
        "etc"
        "home"
      ] ++
      backupLink "${hdd-name}" [
        "appdata2"
      ]
    ;
  };
}
