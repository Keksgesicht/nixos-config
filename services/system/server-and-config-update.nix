{ config, pkgs, ...}:

{
  systemd = {
    services = {
      "server-and-config-update@" = {
        description = "Container and Webservice Updater (config)";
        after = [
          "mnt-cache.mount"
          "unCookie-containers@.service"
        ];
        serviceConfig = {
          Type      = "oneshot";
          ExecStart = "${pkgs.callPackage ../../packages/server-and-config-update.nix {}}/bin/%i.sh";

          PrivateTmp     = "yes";
          ProtectHome    = "yes";
          ProtectClock   = "yes";
          PrivateDevices = "yes";
          ProtectProc    = "invisible";

          ReadOnlyPaths = "/";
          TemporaryFileSystem = "/etc:ro";
        };
      };
      "server-and-config-update@CloudflareProxyIps" = {
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.gnused
          pkgs.wget
        ];
        # extra changes
        description = "Updates Cloudflares Proxy IPs for reverse proxy (swag)";
        serviceConfig = {
          ReadWritePaths = "/mnt/cache/appdata/swag/nginx";
        };
      };
      "server-and-config-update@DownloadBackup" = {
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.gzip
          pkgs.rsync
          pkgs.sudo
          pkgs.gnutar
        ];
        # extra changes
        description = "Generates Backups from different Remote Systems";
        serviceConfig = {
          ProtectHome = "read-only";
          BindReadOnlyPaths = [
            "/etc/passwd"
            "/etc/ssh/ssh_config"
          ];
          ReadWritePaths = "/mnt/array/homeBraunJan/Documents/BackUp";
          #SELinuxContext = "unconfined_u:unconfined_r:unconfined_t:s0";
        };
      };
      "server-and-config-update@Lancache" = {
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.gawk
          pkgs.git
        ];
        # extra changes
        description = "Updates Lancache DNS records for unbound";
        serviceConfig = {
          ReadWritePaths = [
            "/mnt/cache/appdata/lancache/cache-domains"
            "/mnt/cache/appdata/unbound/conf"
          ];
          BindReadOnlyPaths = [
            "/etc/pki"
          ];
        };
      };
      "server-and-config-update@NextcloudUpdates" = {
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.podman
        ];
        # extra changes
        description = "Update Nextcloud itself";
        serviceConfig = {
          ReadWritePaths = [
            "/mnt/array/appdata2/nextcloud"
            "/var/lib/containers/storage"
          ];
        };
      };
      "server-and-config-update@SwagCertbot" = {
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # overrides.conf (generated by Nix) resets PATH variable
        path = [
          pkgs.podman
        ];
        # extra changes
        description = "Renew SSL/TLS Certificate";
        serviceConfig = {
          ReadWritePaths = "/var/lib/containers/storage";
        };
      };
    };

    timers = {
      # one snapshot a day
      "server-and-config-update@" = {
        description = "Container and Webservice Update Timer";
        timerConfig = {
          # Run each month in the evening
          OnCalendar = "*-*-20 20:30:00";
          RandomizedDelaySec = "1h";
          AccuracySec = "100us";
          # also run when system was offline (like anacron)
          Persistent = "true";
        };
      };
      "server-and-config-update@CloudflareProxyIps" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the system context
        wantedBy = [ "timers.target" ];
      };
      "server-and-config-update@DownloadBackup" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the system context
        wantedBy = [ "timers.target" ];
      };
      "server-and-config-update@Lancache" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the system context
        wantedBy = [ "timers.target" ];
      };
      "server-and-config-update@NextcloudUpdates" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the system context
        wantedBy = [ "timers.target" ];
      };
      "server-and-config-update@SwagCertbot" = {
        # only for systemd unit masking
        enable = true;
        # fixes empty unit file (extends template unit)
        overrideStrategy = "asDropin";
        # this auto enables this unit in the system context
        wantedBy = [ "timers.target" ];
        # extra changes
        timerConfig = {
          OnCalendar = "Wed *-*-* 20:20:00";
          RandomizedDelaySec = "5min";
        };
      };
    };
  };
}


