context.modules = [
	# central echo-cancelation unit
	{   name = libpipewire-module-echo-cancel
		args = {
			node.name           = "echo-cancel-unit"
			node.description    = "Echo Cancelation Unit"
			audio.position      = [ FL FR ]
#			library.name        = aec/libspa-aec-webrtc
#			node.latency        = 1024/48000
#			monitor.mode        = false
			capture.props = {
				node.name        = "echo_in_sink"
				node.description = "Echo Capture Sink"
			}
			source.props = {
				node.name        = "echo_in_source"
				node.description = "Echo Source"
				node.target      = "void_sink"
			}
			sink.props = {
				node.name        = "echo_out_sink"
				node.description = "Echo Sink"
			}
			playback.props = {
				node.name        = "echo_out_source"
				node.description = "Echo Playback Source"
				node.target      = "void_sink"
			}
		}
	}
	{   name = libpipewire-module-loopback
		args = {
			node.name           = "recording_out"
			node.description    = "Recording / Gaming"
			audio.position      = [ FL FR ]
			capture.props = {
				media.class = Audio/Sink
				node.name   = "recording_out_sink"
			}
			playback.props = {
				node.name   = "recording_out_source"
				node.target = "void_sink"
			}
		}
	}

	# virtual devices
	{   name = libpipewire-module-loopback
		args = {
			node.name           = "virt_mic"
			node.description    = "Microphone (virtual)"
			audio.position      = [ FL FR ]
			capture.props = {
				media.class = Audio/Sink
				node.name   = "virt_mic_sink"
			}
			playback.props = {
				media.class = Audio/Source
				node.name   = "virt_mic_source"
				node.target = "void_sink"
			}
		}
	}
#	{   name = libpipewire-module-loopback
#		args = {
#            node.name        = "virt_mic_mono"
#            node.description = "Microphone MONO (virtual)"
#            audio.position   = [ MONO ]
#            capture.props = {
#				media.class = Audio/Sink
#				node.name   = "virt_mic_mono_sink"
#            }
#            playback.props = {
#				media.class = Audio/Source
#				node.name   = "virt_mic_mono_source"
#				node.target = "void_mono"
#            }
#        }
#    }
	{   name = libpipewire-module-loopback
		args = {
			node.name        = "mic_loop"
			node.description = "Speaker to Microphone (mic+all)"
			audio.position   = [ FL FR ]
			capture.props = {
				media.class = Audio/Sink
				node.name   = "mic_loop_sink"
			}
			playback.props = {
				node.name   = "mic_loop_source"
				node.target = "void_sink"
			}
		}
	}

	# noise filter
	{   name = libpipewire-module-filter-chain
		args = {
			node.name        = "mic_filter"
			node.description = "Microphone (Noise Canceling)"
			media.name       = "Microphone (Noise Canceling)"
			audio.position   = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
#					plugin  = librnnoise_ladspa
					plugin  = /home/keks/.config/pipewire/plugins/noise-suppression-for-voice/bin/librnnoise_ladspa.so
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 76.0
					}
				} ]
			}
			capture.props = {
				node.name   = "mic_filter_sink"
			}
			playback.props = {
				node.name   = "mic_filter_source"
				node.target = "void_sink"
			}
		}
	}
	{   name = libpipewire-module-filter-chain
		args = {
			node.name           = "chat_filter"
			node.description    = "Chat (Noise Canceling)"
			media.name          = "Chat (Noise Canceling)"
			audio.position      = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
#					plugin  = librnnoise_ladspa
					plugin  = /home/keks/.config/pipewire/plugins/noise-suppression-for-voice/bin/librnnoise_ladspa.so
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 69.0
					}
				} ]
			}
			capture.props = {
				media.class = Audio/Sink
				node.name   = "chat_filter_sink"
			}
			playback.props = {
				media.class = Audio/Source
				node.name   = "chat_filter_source"
				node.target = "void_sink"
			}
		}
	}
	{   name = libpipewire-module-filter-chain
		args = {
			node.name        = "media_filter"
			node.description = "Media (Noise Canceling)"
			media.name       = "Media (Noise Canceling)"
			audio.position   = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
#					plugin  = librnnoise_ladspa
					plugin  = /home/keks/.config/pipewire/plugins/noise-suppression-for-voice/bin/librnnoise_ladspa.so
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 64.0
					}
				} ]
			}
			capture.props = {
				media.class = Audio/Sink
				node.name   = "media_filter_sink"
			}
			playback.props = {
				node.name   = "media_filter_source"
				node.target = "void_sink"
			}
		}
	}
]
