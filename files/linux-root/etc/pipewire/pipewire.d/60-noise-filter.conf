# PipeWire:
# - https://docs.pipewire.org/page_module_filter_chain.html
# Plugin:
# - https://github.com/werman/noise-suppression-for-voice
# - https://github.com/NixOS/nixpkgs/blob/master/pkgs/development/libraries/rnnoise-plugin/default.nix

context.modules = [
	# noise filter
	{   name = libpipewire-module-filter-chain
		args = {
			node.name        = "mic_filter"
			node.description = "Microphone (Noise Canceling)"
			media.name       = "Microphone (Noise Canceling)"
			audio.position   = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
					plugin  = "@pkgRnnoisePlugin@/lib/ladspa/librnnoise_ladspa.so"
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 95.0
					}
				} ]
			}
			capture.props = {
				node.name   = "mic_filter_sink"
			}
			playback.props = {
				node.name   = "mic_filter_source"
				node.target = "void_sink"
			}
		}
	}
	{   name = libpipewire-module-filter-chain
		args = {
			node.name           = "chat_filter"
			node.description    = "Chat (Noise Canceling)"
			media.name          = "Chat (Noise Canceling)"
			audio.position      = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
					plugin  = "@pkgRnnoisePlugin@/lib/ladspa/librnnoise_ladspa.so"
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 85.0
					}
				} ]
			}
			capture.props = {
				media.class = Audio/Sink
				node.name   = "chat_filter_sink"
			}
			playback.props = {
				media.class = Audio/Source
				node.name   = "chat_filter_source"
				node.target = "void_sink"
			}
		}
	}
	{   name = libpipewire-module-filter-chain
		args = {
			node.name        = "media_filter"
			node.description = "Media (Noise Canceling)"
			media.name       = "Media (Noise Canceling)"
			audio.position   = [ FL FR ]
			filter.graph = {
				nodes = [ {
					type    = ladspa
					name    = rnnoise
					plugin  = "@pkgRnnoisePlugin@/lib/ladspa/librnnoise_ladspa.so"
					label   = noise_suppressor_stereo
					control = {
						"VAD Threshold (%)" 75.0
					}
				} ]
			}
			capture.props = {
				media.class = Audio/Sink
				node.name   = "media_filter_sink"
			}
			playback.props = {
				node.name   = "media_filter_source"
				node.target = "void_sink"
			}
		}
	}
]
